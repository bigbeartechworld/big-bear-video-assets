version: "3.7"

services:
  pihole:
    container_name: pihole
    # Use the specified version of the pihole image.
    image: pihole/pihole:2024.07.0
    # Restart the container unless manually stopped.
    restart: unless-stopped
    # Set hostname for the container.
    hostname: pihole
    # Use local DNS for the container.
    dns:
      - 127.0.0.1
    # Port mapping: host:container.
    ports:
      - ${NETWORK_INTERFACE:-0.0.0.0}:53:53/tcp
      - ${NETWORK_INTERFACE:-0.0.0.0}:53:53/udp
      - ${APP_PORT}:80
    # Mount specified directories into the container.
    volumes:
      - ${APP_DATA_DIR}/data/pihole:/etc/pihole
      - ${APP_DATA_DIR}/data/dnsmasq:/etc/dnsmasq.d
    # Environmental variables for the container.
    environment:
      TZ: ${TZ}
      WEBPASSWORD: ${APP_PASSWORD}
    # Grant NET_ADMIN capabilities to the container.
    cap_add:
      - NET_ADMIN
    # Connect the service to the network.
    networks:
      - tipi_main_network
    # Labels for Traefik configuration.
    labels:
      # Main
      traefik.enable: true
      traefik.http.middlewares.pihole-web-redirect.redirectscheme.scheme: https
      traefik.http.services.pihole.loadbalancer.server.port: 80
      # Web - Route for insecure traffic.
      traefik.http.routers.pihole-insecure.rule: Host(`${APP_DOMAIN}`)
      traefik.http.routers.pihole-insecure.entrypoints: web
      traefik.http.routers.pihole-insecure.service: pihole
      traefik.http.routers.pihole-insecure.middlewares: pihole-web-redirect
      # Websecure - Route for secure traffic.
      traefik.http.routers.pihole.rule: Host(`${APP_DOMAIN}`)
      traefik.http.routers.pihole.entrypoints: websecure
      traefik.http.routers.pihole.service: pihole
      traefik.http.routers.pihole.tls.certresolver: myresolver
      # Local domain - Insecure route for local domain.
      traefik.http.routers.pihole-local-insecure.rule: Host(`pihole.${LOCAL_DOMAIN}`)
      traefik.http.routers.pihole-local-insecure.entrypoints: web
      traefik.http.routers.pihole-local-insecure.service: pihole
      traefik.http.routers.pihole-local-insecure.middlewares: pihole-web-redirect
      # Local domain secure - Secure route for local domain.
      traefik.http.routers.pihole-local.rule: Host(`pihole.${LOCAL_DOMAIN}`)
      traefik.http.routers.pihole-local.entrypoints: websecure
      traefik.http.routers.pihole-local.service: pihole
      traefik.http.routers.pihole-local.tls: true
